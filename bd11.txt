С помощью объединения вывести данные о каждом заказчике, для которого определен продавец.

SELECT *
FROM Zakaz
JOIN Klient USING(ID_KL)
JOIN Prodaves USING(ID_Pr)

Вывести имя заказчика и данные о средней цене доставки для него. Если цена доставки больше средней по таблице написать - lot, меньше – few

SELECT k.Name_KL AS [имя заказчика], AVG(z.Cena_Dostavki) AS [средняя цена доставки],
  (
        SELECT AVG(Cena_Dostavki)
        FROM Zakaz
    ) AS "общая средняя цена доставки",
   CASE
        WHEN AVG(z.Cena_Dostavki) > (
            SELECT AVG(Cena_Dostavki)
            FROM Zakaz
        ) THEN 'lot'
        ELSE 'few'
    END AS "few-low"

FROM Klient k
JOIN Zakaz z USING(ID_KL)
GROUP BY k.Name_KL


Соедините вместе все таблицы с помощью внешнего объединения.

SELECT z.*, k.*, p.*
FROM Zakaz z
LEFT JOIN Klient k USING (ID_KL)
LEFT JOIN Prodaves p USING (ID_Pr)

С помощью объединения вывести данные о скидках клиента для каждого продавца

SELECT k.Name_KL, k.Discoun, p.Name_Pr
FROM Klient k
JOIN Prodaves p USING(ID_Pr)

Напишите запрос, который выведет все города, в которых живут продавцы и заказчики.

SELECT p.City_Pr
FROM Prodaves p

UNION

SELECT k.City_KL
FROM Klient k

С помощью объединения вывести все данные о заказчиках и  заказах, даже если заказчик не сделал ни одного заказа за указанный период.

SELECT *
FROM Klient k
LEFT JOIN Zakaz z USING(ID_KL)

Составьте запроса для вывода имен и кодов всех продавцов, в чьих городах есть покупатели, которых они не обслуживают. С помощью оператора в подзапросе.

SELECT p.Name_Pr, p.ID_Pr
FROM Prodaves p
WHERE p.City_Pr IN (SELECT k.City_KL FROM Klient k WHERE p.ID_Pr != k.ID_Pr) ;


Напишите запрос, который выведет все города и имена продавцов и заказчиков, которые живут в Лондоне

SELECT p.City_Pr, p.Name_Pr
FROM Prodaves p
WHERE p.City_Pr LIKE 'London'

UNION

SELECT k.City_KL, k.Name_KL
FROM Klient k
WHERE k.City_KL LIKE 'London';








